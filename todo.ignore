x Generalize for a rbf based on observations

x Compute for several bowshocks

x Make channel plots, moments 0 and 1

 (- Generalize for a non zero jet radius) not in this version

x PA for each bowshock: Rotate the model instead of rotate the image

x change the limits in the PV

x fix vsys

x erease bs.py (it is deprecated)

x clean codes that have your paths written on it 

x merge bsutils and utils

x clean functions/variables unused

x erease bowshock fitter? leave it?

x Make an __init__.py that only imports the usefull objects

x think of tests:
 - (not necessary) Test on coordinates?
 x test on mass?: try to test only with BowshockModel! or obsmod??
 x Test on convolution: masses/intensities are conserved
 x Test on total mass calculation from the integrated intensity of the cube in
 the optically thin regime

x calcuation of NH2

x do a proper header. Erease warning from casaviewer and ds9. Try carta
 - (for later): Simplify how hdrs are created (maybe doing an extra module
 headers.py with three functions, one for the cube, for the moments and another
 one for the pv). Also, offsets and pv diagrams are not displayed in CARTA
 either ds9, only in casaviewer.

x you are not doing well the moment 2, since the units should be km/s instead of km^2/s^2
 
x allow install from pipy

x extrapolable to other CO transitions?

x fix ref coordinates

x Fix moments when the noise is 0 or very small. I think you can do a np.iscloseto().

x Make an option to add the same noise instead to relative to the maximum

x make some examples with jupyter notebooks

x Example 3 of input files. 

x Add a description section in the documentation (also in the draft? with the pipeline scheme?)

x Incorporate the docs (make it first)

x Add contributing statement

x Add beam convolution in figures

x Change iws -> j in params figures

x Include image of the channel maps?

- Try to do a map that is not square (nxs!=nys). Everything ok?

- Include IWS model? It has been applied several times

- (I am not able to get this done...) Add warning (or error) if the number of points do not fully fill voxels space. [Although the sampling is apparently ok, there are moire patterns if the sampling is not high enough]

- change mom8 for maxintens

- include plot parameters for the channel maps

x make the API work in readthedocs

x update the readme with the new documentation

x Change the documentation to book template

x I think BowshockModel should be renamed by BowshockNJ

x change comass name: radtrans

x (no for now) make the standalone comass a nother module

x (no for now) bsmodels should only contain BowshockModel (and probably IWS). Make other modules for the rest. 

x modular usage: Remember for the modular usage that you have available some of the important functons directly from bowshockpy as you have defined them n the __init__.py

x test numerical vs anaytical

x use write_log in utils? If not, erease it

x make an statement in the paper:
  x What kind of user the software is targeted to?
  x Softwares that compares to bowshockpy?

x Unify meanmass con muH2. Keep muH2

x J should be the upper level

- (not necessary) Make possible to define the configuration file in one cell (or a dictionary) and then run bowshockpy [I don't know if this makes sense, you can always run it from the terminal with os.system or magical %]

x I think there is a way to optimize the computation by changing doing a variable dphi in such a way that ds is constant through z. (I implemented it but I cannot get the same accuracy in masses than with a constant phi.)
- (Not for now) Also, by computing half of the model in phis.
x By restricting the channels to populate before the iteraction in channels (apparently this does not speed up the software).

x Implement no cic.

x pa and i should be in degrees

x Make a sampling cube using np.histogram in three dimension

- "Observers view front side" and "Observers view back side". Or simply front size and back side.

import bowshockpy as bp

gen = bp.bowshock_generator()
gen.params
...
gen.params["vj_1"] = 5
gen.generate_bowshock()


- Solve:

models/example3/fits/I_nc_mom0.fits saved
models/example3/fits/I_nc_mom1.fits saved
Traceback (most recent call last):
  File "/home/guille/py_envs/bowpy/bin/bowshockpy", line 8, in <module>
    sys.exit(main())
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/genbow.py", line 220, in main
    generate_bowshock(p)
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/genbow.py", line 151, in generate_bowshock
    bscp.momentsandpv_and_params_all(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1492, in momentsandpv_and_params_all
    self.momentsandpv_and_params(ck, bscs, **kwargs)
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1656, in momentsandpv_and_params
    self.plotmom1(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1319, in plotmom1
    return ut.plotmom1(mom1, **kwargs)
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/utils.py", line 300, in plotmom1
    vmin = vmin if vmin is not None else np.min(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/numpy/_core/fromnumeric.py", line 3302, in min
    return _wrapreduction(a, np.minimum, 'min', axis, None, out,
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/numpy/_core/fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
ValueError: zero-size array to reduction operation minimum which has no identity


Maybe with try?


Also:
models/example3/fits/I_nc_mom2.fits saved
Traceback (most recent call last):
  File "/home/guille/py_envs/bowpy/bin/bowshockpy", line 8, in <module>
    sys.exit(main())
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/genbow.py", line 220, in main
    generate_bowshock(p)
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/genbow.py", line 151, in generate_bowshock
    bscp.momentsandpv_and_params_all(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1492, in momentsandpv_and_params_all
    self.momentsandpv_and_params(ck, bscs, **kwargs)
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1692, in momentsandpv_and_params
    pvimage = self.pvalongz(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/bsmodels.py", line 1074, in pvalongz
    pvimage = moments.pv(
  File "/home/guille/py_envs/bowpy/lib/python3.10/site-packages/bowshockpy/moments.py", line 45, in pv
    selected_data = cube[:, pixarray, :]
IndexError: index 239 is out of bounds for axis 1 with size 200




Concatenate example:


from PIL import Image, ImageDraw, ImageFont

nx = 200
ny = 200
nz = 50
text_coords = (int(nx/4), int(ny/3))
font = ImageFont.load_default(size=20)
image_text = Image.new("L",(nx,ny),"black",)
draw = ImageDraw.Draw(image_text)
draw.text(text_coords, "Initial cube", "white", font=font)
array_text = np.array(image_text, dtype=float)[::-1]
cube_text = np.array([array_text for i in range(nz)])
cube_text[cube_text!=0] = np.max(model_cube.cube)/20

model_cube_concat = copy.deepcopy(model_cube)
model_cube_concat.makecube(
    fromcube=cube_text
    )

model_cube_concat.plot_channels(
    nrow=5, ncol=4, 
    vmax=np.percentile(model_cube_concat.cube, 99.9),
    savefig="models/prueba3.pdf",
    )


------------------


x change concatenate by combine

x implement higher transitions CO

x Allow to give as input the frequency of the transition instead of the
  transition. I think the transition should also be given

x Change bowshockpy with BowshockPy

x Change XCO for abund

x Dipole moment should be a parameter in the input file

- Change the units of the channels -> masses-> masses/(pix*chan). And so on

x implement an example with custom calculation of tau and I
(Although we could make the radiative transfer from the scratch, we are going
to use some functions already defined in radtrans.py)

- Now I think that the custom radiative transfer must be performed using another script...
    · Pros of writting everything in the same file:
        - You do not have to define twice some parameters
        - No extra arguments in running bowshockpy 
    · Cons:
        - You have to import packages in a file that a priori was just a configuration file

x New test on intensity cubes. Keep track of a value of a pixel in intensities
  (not in mass, as you alreadyd did)

- Look for the reasons on the differences in Aij between literature

- Things to fix in the notebook:
   x All mention to CO (well, the notebook is an example and should be included)
   x BowshockPy
   - nu as a new parameter of CubeProcessing
   - mu as a new parameter of CubeProcessing
   - Change the order of the parameters in CubeProcessing
   x Concatenate -> combine
   - ObsModel now comes from modelproj.py But I think it does not affect hte notebook

x I think it would be good to split in two cube.py. At least, ObsModel should not be there because it is not the cube

x Also, there should be a way to simplify the code regarding the headers of the fits file

x Divide cube.py into two?

x Add a description in each .py file

x Header fixed

- Implement the possibility of using as input floats (then a unit would be assumed), or astropy units.

astropy.units.Quantity -> astropy.units.quantity.Quantity

- You write Inu but not taunu. Fix this.

- Make sure that nothing happens if the user do not want noise. How should be defined the parameters about noise in the input param file?

- mom2clipping: I think there is a problem when it is a float and not an string

x Add restfreq in cube header from nu parameter

- Manage warnings with import warnings?
https://docs.python.org/3/library/warnings.html

- You can put as example5 parameters based on HCO+. The discussion of Tafalla 2010 regarding this molecule and its relation with the EHV is interesting:

The third species with a likely EHV feature in the spectrum
is HCO+ . As Fig. 5 shows, the HCO+ (1−0) line from the L1448
outflow presents an almost continuous wing with a hint of a rela-
tive maximum near the EHV velocity range. In the I04166 spec-
trum, on the other hand, HCO+ (1−0) presents a distinct emission
peak at the velocity expected for the EHV regime, suggesting
that at least part of the HCO+ emission at high velocities truly
arises from the EHV gas. These two HCO+ spectra illustrate a
trend, further seen in CS and HCN, of increasing confusion be-
tween the EHV feature and what seems to be a high-velocity
continuation of the wing emission. As mentioned in Sect. 3.1,
the wing emission in an outflow probably does not end at the ve-
locity at which the EHV component starts to dominate the spec-
trum, but it continues to higher velocities overlapping with the
EHV gas. In the lines of CO (also SiO and SO), the EHV emis-
sion is brighter than the wing, so it dominates the spectrum. In
HCO+ , CS, and HCN, the weak EHV emission barely (if at all)
stands out over the wing emission, and its separation from the
fastest wing is ambiguous
